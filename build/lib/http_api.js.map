{"version":3,"file":"http_api.js","sourceRoot":"","sources":["../../src/lib/http_api.ts"],"names":[],"mappings":"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","sourcesContent":["// credits to rovo89\r\n// taken from here https://gist.github.com/rovo89/dff47ed19fca0dfdda77503e66c2b7c7\r\n\r\nimport { Roborock } from \"../main\";\r\n\r\nimport axios from \"axios\";\r\nimport crypto from \"crypto\";\r\n\r\nconst API_BASE_URL = \"https://euiot.roborock.com\";\r\nconst API_LOGIN_ENDPOINT = \"api/v1/login\";\r\n\r\nexport class http_api {\r\n\tadapter: Roborock;\r\n\tloginApi: any;\r\n\trealApi: any;\r\n\tuserData: any;\r\n\thomeData: any;\r\n\thomeID: string | null;\r\n\r\n\tconstructor(adapter) {\r\n\t\tthis.adapter = adapter;\r\n\r\n\t\tthis.loginApi = null;\r\n\t\tthis.userData = null;\r\n\t\tthis.homeData = null;\r\n\t\tthis.homeID = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} clientID\r\n\t */\r\n\tasync init(clientID) {\r\n\t\t// Initialize the login API (which is needed to get access to the real API).\r\n\t\tthis.loginApi = axios.create({\r\n\t\t\tbaseURL: API_BASE_URL,\r\n\t\t\theaders: {\r\n\t\t\t\theader_clientid: crypto.createHash(\"md5\").update(this.adapter.config.username).update(clientID).digest().toString(\"base64\"),\r\n\t\t\t},\r\n\t\t});\r\n\t\t// api/v1/getUrlByEmail(email = ...)\r\n\r\n\t\tawait this.initializeRealApi();\r\n\t\tawait this.getHomeID();\r\n\t}\r\n\r\n\tasync initializeRealApi() {\r\n\t\tthis.adapter.log.debug(`initialize http_api`);\r\n\r\n\t\tif (!this.loginApi) {\r\n\t\t\tthrow new Error(\"loginApi is not initialized. Call init() first.\");\r\n\t\t}\r\n\r\n\t\t// Try to load existing userdata.\r\n\t\tconst storedUserData = await this.adapter.getState(\"UserData\");\r\n\t\tif (storedUserData && storedUserData.val) {\r\n\t\t\tthis.userData = await JSON.parse(storedUserData.val);\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\t// Log in.\r\n\t\t\t\tthis.userData = await this.loginApi\r\n\t\t\t\t\t.post(\r\n\t\t\t\t\t\tAPI_LOGIN_ENDPOINT,\r\n\t\t\t\t\t\tnew URLSearchParams({ username: this.adapter.config.username, password: this.adapter.config.password, needtwostepauth: \"false\" }).toString()\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.then((res) => res.data.data);\r\n\r\n\t\t\t\t// Alternative without password:\r\n\t\t\t\t// await loginApi.post('api/v1/sendEmailCode', new url.URLSearchParams({username: username, type: 'auth'}).toString()).then(res => res.data);\r\n\t\t\t\t// // ... get code from user ...\r\n\t\t\t\t// userdata = await loginApi.post('api/v1/loginWithCode', new url.URLSearchParams({username: username, verifycode: code, verifycodetype: 'AUTH_EMAIL_CODE'}).toString()).then(res => res.data.data);\r\n\r\n\t\t\t\tif (!this.userData) {\r\n\t\t\t\t\tthrow new Error(\"Login returned empty userdata.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tawait this.adapter.setState(\"UserData\", { val: JSON.stringify(this.userData), ack: true });\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthis.adapter.log.error(`Error in getUserData: ${error.message}. This is most likely due to too many reconnects. Emptying UserData & HomeData`);\r\n\r\n\t\t\t\tawait this.adapter.setState(\"HomeData\", { val: null, ack: true });\r\n\t\t\t\tawait this.adapter.setState(\"UserData\", { val: null, ack: true });\r\n\r\n\t\t\t\tthis.adapter.log.error(error.stack);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this.userData.token) throw new Error(\"Failed to retrieve user token. Check login credentials.\");\r\n\t\tthis.loginApi.defaults.headers.common[\"Authorization\"] = this.userData.token;\r\n\r\n\t\ttry {\r\n\t\t\tconst rriot = this.get_rriot();\r\n\r\n\t\t\t// Initialize the real API.\r\n\t\t\tconst realApi = axios.create({ baseURL: this.userData.rriot.r.a });\r\n\t\t\trealApi.interceptors.request.use((config) => {\r\n\t\t\t\tconst timestamp = Math.floor(Date.now() / 1000);\r\n\t\t\t\tconst nonce = crypto\r\n\t\t\t\t\t.randomBytes(6)\r\n\t\t\t\t\t.toString(\"base64\")\r\n\t\t\t\t\t.substring(0, 6)\r\n\t\t\t\t\t.replace(/[+/]/g, (m) => (m === \"+\" ? \"X\" : \"Y\"));\r\n\t\t\t\tconst urlPath = realApi ? new URL(realApi.getUri(config)).pathname : \"\";\r\n\t\t\t\tconst prestr = [rriot.u, rriot.s, nonce, timestamp, md5hex(urlPath), \"\", \"\"].join(\":\");\r\n\t\t\t\tconst mac = crypto.createHmac(\"sha256\", rriot.h).update(prestr).digest(\"base64\");\r\n\r\n\t\t\t\tconfig.headers[\"Authorization\"] = `Hawk id=\"${rriot.u}\", s=\"${rriot.s}\", ts=\"${timestamp}\", nonce=\"${nonce}\", mac=\"${mac}\"`;\r\n\r\n\t\t\t\treturn config;\r\n\t\t\t});\r\n\t\t\tthis.realApi = realApi;\r\n\r\n\t\t\tawait this.adapter.setState(\"info.connection\", { val: true, ack: true });\r\n\t\t} catch (error) {\r\n\t\t\tthis.adapter.log.error(`Error in initializeRealApi: ${error.stack}`);\r\n\t\t\tawait this.adapter.setState(\"info.connection\", { val: false, ack: true });\r\n\t\t}\r\n\t}\r\n\r\n\tasync getHomeID() {\r\n\t\tif (!this.loginApi) {\r\n\t\t\tthrow new Error(\"loginApi is not initialized. Call init() first.\");\r\n\t\t}\r\n\r\n\t\tconst response = await this.loginApi.get(\"api/v1/getHomeDetail\");\r\n\t\tif (response.data.data) {\r\n\t\t\tthis.adapter.log.debug(`getHomeDetail: ${JSON.stringify(response.data)}`);\r\n\t\t\tthis.homeID = response.data.data.rrHomeId;\r\n\t\t\tthis.adapter.log.debug(`this.homeID: ${this.homeID}`);\r\n\t\t} else {\r\n\t\t\tthis.adapter.log.error(`failed to get getHomeDetail: ${response.data.msg}`);\r\n\t\t}\r\n\t}\r\n\r\n\tasync updateHomeData() {\r\n\t\tif (!this.loginApi) {\r\n\t\t\tthrow new Error(\"loginApi is not initialized. Call init() first.\");\r\n\t\t}\r\n\t\tif (!this.realApi) {\r\n\t\t\tthrow new Error(\"realApi is not initialized. Call initializeRealApi() first\");\r\n\t\t}\r\n\r\n\t\tif (this.homeID) {\r\n\t\t\tthis.adapter.log.debug(`Getting HomeData with homeId: ${this.homeID}`);\r\n\t\t\tthis.homeData = await this.realApi\r\n\t\t\t\t.get(`v2/user/homes/${this.homeID}`)\r\n\t\t\t\t.then((res) => res.data.result)\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\tthis.adapter.log.error(`Error: ${e?.stack || e}`);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t});\r\n\r\n\t\t\tawait this.adapter.setState(\"HomeData\", { val: JSON.stringify(this.homeData), ack: true });\r\n\t\t} else {\r\n\t\t\tthis.adapter.log.error(`No homeId found`);\r\n\t\t}\r\n\t}\r\n\r\n\tget_rriot() {\r\n\t\tif (!this.userData) {\r\n\t\t\tthrow new Error(\"this.userData is not initialized. Call updateHomeData() first\");\r\n\t\t}\r\n\t\treturn this.userData.rriot;\r\n\t}\r\n\r\n\tasync getScenes() {\r\n\t\tif (!this.loginApi) {\r\n\t\t\tthrow new Error(\"loginApi is not initialized. Call init() first.\");\r\n\t\t}\r\n\t\tif (!this.realApi) {\r\n\t\t\tthrow new Error(\"realApi is not initialized. Call initializeRealApi() first\");\r\n\t\t}\r\n\r\n\t\treturn await this.realApi.get(`user/scene/home/${this.homeID}`).then((res) => res.data);\r\n\t}\r\n\r\n\tasync executeScene(sceneID) {\r\n\t\tif (!this.realApi) {\r\n\t\t\tthrow new Error(\"realApi is not initialized. Call initializeRealApi() first\");\r\n\t\t}\r\n\r\n\t\tawait this.realApi.post(`user/scene/${sceneID.val}/execute`);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} duid\r\n\t */\r\n\tasync getFirmwareStates(duid) {\r\n\t\ttry {\r\n\t\t\tif (!this.realApi) {\r\n\t\t\t\tthrow new Error(\"realApi is not initialized. Call initializeRealApi() first\");\r\n\t\t\t}\r\n\r\n\t\t\treturn await this.realApi.get(`ota/firmware/${duid}/updatev2`);\r\n\t\t} catch (error) {\r\n\t\t\tthrow new Error(`Error in getFirmwareStates: ${error.message}`);\r\n\t\t}\r\n\t}\r\n\r\n\tgetProducts() {\r\n\t\tif (!this.homeData) {\r\n\t\t\tthrow new Error(\"this.homeData is not initialized. Initialize via updateHomeData() first\");\r\n\t\t}\r\n\r\n\t\treturn this.homeData.products;\r\n\t}\r\n\r\n\tgetDevices() {\r\n\t\tif (!this.homeData) {\r\n\t\t\tthis.adapter.log.warn(\"homeData not initialized, returning empty devices list\");\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\treturn [...(this.homeData.devices || []), ...(this.homeData.receivedDevices || [])];\r\n\t}\r\n\r\n\tgetReceivedDevices() {\r\n\t\tif (!this.homeData) {\r\n\t\t\tthrow new Error(\"this.homeData is not initialized. Initialize via updateHomeData() first\");\r\n\t\t}\r\n\r\n\t\treturn this.homeData.receivedDevices;\r\n\t}\r\n\r\n\tisSharedDevice(duid) {\r\n\t\tconst reactedDevices = this.getReceivedDevices();\r\n\t\treturn reactedDevices.some((device) => device.duid === duid);\r\n\t}\r\n\r\n\tgetMatchedRoomIDs(assignFallbackNames = false) {\r\n\t\tif (!this.homeData || !Array.isArray(this.homeData.rooms)) {\r\n\t\t\tthrow new Error(\"this.homeData.rooms is not initialized. Call updateHomeData() first.\");\r\n\t\t}\r\n\r\n\t\tlet unnamedCounter = 1;\r\n\r\n\t\tconst matchedRooms = this.homeData.rooms.map((room) => {\r\n\t\t\tlet name = room.name?.trim();\r\n\r\n\t\t\tif (!name && assignFallbackNames) {\r\n\t\t\t\tname = `Room ${unnamedCounter++}`;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tid: room.id,\r\n\t\t\t\tname: name || \"\",\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\t// Optional: only log in fallback mode\r\n\t\tif (assignFallbackNames) {\r\n\t\t\tthis.adapter.log.info(`Matched ${matchedRooms.length} rooms (fallback names included)`);\r\n\t\t}\r\n\r\n\t\treturn matchedRooms;\r\n\t}\r\n\r\n\tgetMatchedLocalKeys() {\r\n\t\tif (!this.homeData) {\r\n\t\t\tthrow new Error(\"this.homeData is not initialized. Initialize via updateHomeData() first\");\r\n\t\t}\r\n\r\n\t\tconst devices = this.getDevices();\r\n\t\treturn new Map(devices.map((device) => [device.duid, device.localKey]));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} duid\r\n\t * @returns {string|null}\r\n\t */\r\n\tgetRobotModel(duid) {\r\n\t\tif (!duid) {\r\n\t\t\tthrow new Error(\"Parameter duid missing in function getRobotModel\");\r\n\t\t}\r\n\r\n\t\tconst devices = this.getDevices();\r\n\t\ttry {\r\n\t\t\tconst products = this.getProducts();\r\n\r\n\t\t\tconst device = devices.find((device) => device.duid === duid);\r\n\t\t\tif (!device) {\r\n\t\t\t\tthis.adapter.log.error(`device ${duid} not found in devices`);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconst product = products.find((product) => product.id === device.productId);\r\n\t\t\treturn product ? product.model : null;\r\n\t\t} catch (error) {\r\n\t\t\tthis.adapter.log.error(`Error in getRobotModel: ${error.message}`);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} duid\r\n\t */\r\n\tgetProductCategory(duid) {\r\n\t\tconst devices = this.getDevices();\r\n\t\ttry {\r\n\t\t\tconst products = this.getProducts();\r\n\r\n\t\tconst productID = devices.find((device) => device.duid == duid).productId;\r\n\t\tconst product = products.find((product) => product.id == productID);\r\n\r\n\t\t\treturn product ? product.category : null;\r\n\t\t} catch (error) {\r\n\t\t\tthis.adapter.log.error(`Error in getProductCategory: ${error.message}`);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} duid\r\n\t */\r\n\tgetFeatureSet(duid) {\r\n\t\tconst devices = this.getDevices();\r\n\r\n\t\treturn devices.find((device) => device.duid == duid).featureSet;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} duid\r\n\t */\r\n\tgetNewFeatureSet(duid) {\r\n\t\tconst devices = this.getDevices();\r\n\r\n\t\treturn devices.find((device) => device.duid == duid).newFeatureSet;\r\n\t}\r\n}\r\n\r\nfunction md5hex(str) {\r\n\treturn crypto.createHash(\"md5\").update(str).digest(\"hex\");\r\n}\r\n"]}