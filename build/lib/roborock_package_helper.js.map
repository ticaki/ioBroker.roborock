{"version":3,"file":"roborock_package_helper.js","sourceRoot":"","sources":["../../src/lib/roborock_package_helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { Roborock } from \"../main\";\r\n\r\nimport fs from \"fs\";\r\nimport JSZip from \"jszip\";\r\n\r\nexport class roborock_package_helper {\r\n\tadapter: Roborock;\r\n\r\n\tconstructor(adapter) {\r\n\t\tthis.adapter = adapter;\r\n\t}\r\n\r\n\tasync updateProduct(loginApi, productID, duid) {\r\n\t\tconst products = await loginApi.get(\"api/v3/product\");\r\n\t\tconst list = products.data.data.categoryDetailList;\r\n\r\n\t\tconst appPluginRequest: any = {\r\n\t\t\tapilevel: 99999, // sniffed 10016 and 10019 from the app but it's subject to change so we use a high number\r\n\t\t\tproductids: [],\r\n\t\t\ttype: 2,\r\n\t\t};\r\n\r\n\t\tconst vacuumIDs = {};\r\n\t\tfor (const array in list) {\r\n\t\t\tfor (const product in list[array][\"productList\"]) {\r\n\t\t\t\tconst vacuum = list[array][\"productList\"][product];\r\n\t\t\t\tconst productIDinPackage = this.findProductIDinPackage(productID, vacuum);\r\n\r\n\t\t\t\tif (productIDinPackage) {\r\n\t\t\t\t\tappPluginRequest.productids.push(vacuum.id);\r\n\t\t\t\t\tvacuumIDs[vacuum.id] = vacuum.model;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst packageData = await loginApi.post(\"api/v1/appplugin\", appPluginRequest);\r\n\r\n\t\tconst packages = packageData.data.data;\r\n\t\tfor (const rr_package in packages) {\r\n\t\t\tconst vacuum = vacuumIDs[packages[rr_package].productid];\r\n\t\t\tconst zipUrl = packages[rr_package].url;\r\n\t\t\tconst version = packages[rr_package].version;\r\n\t\t\tconst imagePath = `./images/products/${vacuum}`;\r\n\t\t\tconst objectPath = `Devices.${duid}.images`;\r\n\t\t\tconst versionFilePath = imagePath + \"/version\";\r\n\r\n\t\t\tif (!fs.existsSync(\"./lib/roborockPackage/\")) fs.mkdirSync(\"./lib/roborockPackage/\");\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Create missing vacuum folders\r\n\t\t\t\tif (!fs.existsSync(`./images/products/`)) fs.mkdirSync(`./images/products/`);\r\n\t\t\t\tif (!fs.existsSync(imagePath)) fs.mkdirSync(imagePath);\r\n\r\n\t\t\t\tthis.adapter.setObjectAsync(objectPath, {\r\n\t\t\t\t\ttype: \"folder\",\r\n\t\t\t\t\tcommon: {\r\n\t\t\t\t\t\tname: \"images\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnative: {},\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (!fs.existsSync(versionFilePath)) {\r\n\t\t\t\t\tfs.writeFileSync(versionFilePath, \"0\");\r\n\t\t\t\t}\r\n\t\t\t\tconst currentVersion = fs.readFileSync(versionFilePath, \"utf8\");\r\n\r\n\t\t\t\tif (packages[rr_package].version > currentVersion) {\r\n\t\t\t\t\tthis.adapter.log.debug(`New version roborock package available: ${version}`);\r\n\r\n\t\t\t\t\tconst response = await loginApi.get(zipUrl, { responseType: \"arraybuffer\" });\r\n\t\t\t\t\tconst zip = await JSZip.loadAsync(response.data);\r\n\t\t\t\t\tconst folder = zip.folder(\"drawable-mdpi\");\r\n\r\n\t\t\t\t\tif (folder) {\r\n\t\t\t\t\t\tlet i = 0;\r\n\t\t\t\t\t\tfolder.forEach(async (relativePath, file) => {\r\n\t\t\t\t\t\t\tif (!file.dir) {\r\n\t\t\t\t\t\t\t\tconst fileContent = await file.async(\"nodebuffer\");\r\n\t\t\t\t\t\t\t\tif (fileContent) {\r\n\t\t\t\t\t\t\t\t\tfs.writeFileSync(`${imagePath}/${relativePath}`, fileContent);\r\n\r\n\t\t\t\t\t\t\t\t\tconst fileContentBase64 = fileContent.toString(\"base64\");\r\n\t\t\t\t\t\t\t\t\tconst fileNameWithoutExtension = relativePath.slice(0, relativePath.lastIndexOf(\".\"));\r\n\t\t\t\t\t\t\t\t\tconst formattedNumber = (i).toString().padStart(3, \"0\"); // \"001\", \"002\", \"003\", etc.\r\n\r\n\t\t\t\t\t\t\t\t\tthis.adapter.setObjectAsync(`${objectPath}.${formattedNumber}`, {\r\n\t\t\t\t\t\t\t\t\t\ttype: \"state\",\r\n\t\t\t\t\t\t\t\t\t\tcommon: {\r\n\t\t\t\t\t\t\t\t\t\t\tname: fileNameWithoutExtension,\r\n\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\trole: \"value\",\r\n\t\t\t\t\t\t\t\t\t\t\tread: true,\r\n\t\t\t\t\t\t\t\t\t\t\twrite: false\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tnative: {},\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tthis.adapter.setStateAsync(`${objectPath}.${formattedNumber}`, { val: fileContentBase64, ack: true });\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfs.writeFileSync(versionFilePath, version.toString());\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthis.adapter.log.error(`${err.stack} roborock_package_helper.updateProduct ${productID}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfindProductIDinPackage(productID, list) {\r\n\t\tif (list.model === productID) {\r\n\t\t\treturn list.id;\r\n\t\t}\r\n\t}\r\n}"]}