{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["const utils = require(\"@iobroker/adapter-core\");\nimport { randomBytes } from \"crypto\";\nimport ws from \"ws\";\nimport express from \"express\";\nimport { spawn } from \"child_process\";\nimport go2rtcPath from \"go2rtc-static\";\n\nimport { roborock_package_helper } from \"./lib/roborock_package_helper\";\nimport { device_features } from \"./lib/device_features\";\nimport { requestsHandler } from \"./lib/requestsHandler\";\nimport { http_api } from \"./lib/http_api\";\nimport { local_api } from \"./lib/local_api\";\nimport { mqtt_api } from \"./lib/mqtt_api\";\nconst sniffing = require(\"../lib/sniffing\");\n\nlet socketServer, webserver;\n\nconst dockingStationStates = [\"cleanFluidStatus\", \"waterBoxFilterStatus\", \"dustBagStatus\", \"dirtyWaterBoxStatus\", \"clearWaterBoxStatus\", \"isUpdownWaterReady\"];\n\ntype StateObjectOptions = {\n\tpath: string;\n\tname: string;\n\ttype: string;\n\tunit?: string;\n\tdef?: any;\n\trole?: string;\n\tread?: boolean;\n\twrite?: boolean;\n\tstates?: any;\n\tnative?: Record<string, any>;\n};\n\ntype DeviceStatus = Record<string, number>;\n\ninterface SendValue {\n\tparameters: any[];\n\tcommand: string;\n}\n\ninterface Robot {\n\tduid: string;\n\tname: string;\n}\n\ninterface StateCommonExtension {\n\tmin?: number;\n\tmax?: number;\n\tunit?: string;\n}\n\nconst A01states = {\n\t200: \"Start\",\n\t201: \"Status\",\n\t202: \"SelfCleanMode\",\n\t203: \"SelfCleanLevel\",\n\t204: \"WarmLevel\",\n\t205: \"CleanMode\",\n\t206: \"Suction\",\n\t207: \"WaterLevel\",\n\t208: \"BrushSpeed\",\n\t209: \"Power\",\n\t210: \"Preset\",\n\t212: \"AutoSelfClean\",\n\t213: \"AutoDry\",\n\t214: \"MeshLeft\",\n\t215: \"BrushLeft\",\n\t216: \"Error\",\n\t218: \"MeshReset\",\n\t219: \"BrushReset\",\n\t221: \"Volumn\",\n\t222: \"StandLockAutoRun\",\n\t223: \"AutoSelfCleanMode\",\n\t224: \"AutoDryMode\",\n\t225: \"SilentDryDuration\",\n\t226: \"SilentModeSwitch\",\n\t227: \"SilentModeStartTime\",\n\t228: \"SilentModeEndTime\",\n\t229: \"RecentCleanTime\",\n\t230: \"TotalCleanTime\",\n\t235: \"FeatureInfo\",\n\t236: \"ResetRobot\",\n\t237: \"DryRemainTimeMin\",\n\t238: \"Cleanser\",\n\t10000: \"QueryDP\",\n\t10001: \"CheckIsFCC\",\n\t10002: \"AutoDryTimer\",\n\t10003: \"SetSoundPackage\",\n\t10004: \"SoundPackageInfo\",\n\t10005: \"GeneralInfo\",\n\t10006: \"PrivacyInfo\",\n\t10007: \"UpdateInfo\",\n\t10101: \"RPCRequest\",\n\t10102: \"RPCResponse\",\n};\n\nexport class Roborock extends utils.Adapter {\n\tconstructor(options = {}) {\n\t\tsuper({ ...options, name: \"roborock\", useFormatDate: true });\n\t\tthis.on(\"ready\", this.onReady.bind(this));\n\t\tthis.on(\"stateChange\", this.onStateChange.bind(this));\n\t\t// this.on(\"objectChange\", this.onObjectChange.bind(this));\n\t\t// this.on(\"message\", this.onMessage.bind(this));\n\t\tthis.on(\"unload\", this.onUnload.bind(this));\n\n\t\tthis.socket = null;\n\t\tthis.nonce = randomBytes(16);\n\t\tthis.pendingRequests = new Map();\n\t\tthis.http_api = new http_api(this);\n\t\tthis.local_api = new local_api(this);\n\t\tthis.mqtt_api = new mqtt_api(this);\n\t\tthis.roborock_package_helper = new roborock_package_helper(this);\n\t\tthis.requestsHandler = new requestsHandler(this);\n\t\tthis.device_features = new device_features(this);\n\t\tthis.sniffing = new sniffing(this);\n\n\t\tthis.isInitializing = true;\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tasync onReady() {\n\t\tif (!this.config.username || !this.config.password) {\n\t\t\tthis.log.error(\"Username or password missing!\");\n\t\t\treturn;\n\t\t}\n\n\t\tthis.sentryInstance = this.getPluginInstance(\"sentry\");\n\t\tthis.translations = require(`.././admin/i18n/${this.language || \"en\"}/translations.json`); // fall back to en for test-and-release.yml\n\n\t\tthis.log.info(`Starting adapter. This might take a few minutes depending on your setup. Please wait.`);\n\n\t\tawait this.setupBasicObjects();\n\n\t\ttry {\n\t\t\tconst clientID = await this.ensureClientID();\n\t\t\tawait this.http_api.init(clientID);\n\t\t} catch (error) {\n\t\t\tthis.log.error(`Failed to get clientID. ${error.stack}`);\n\t\t}\n\n\t\t// Initialize MQTT API\n\t\tawait this.mqtt_api.init();\n\n\t\tawait this.http_api.updateHomeData();\n\t\tconst devices = this.http_api.getDevices();\n\t\tthis.log.debug(`Devices from cloud: ${JSON.stringify(devices)}`);\n\n\t\tawait this.local_api.startUdpDiscovery();\n\n\t\t// need to get network data before processing any other data\n\t\tfor (const device of devices) {\n\t\t\tconst version = await this.getDeviceProtocolVersion(device.duid);\n\t\t\tconst isSharedDevice = this.http_api.isSharedDevice(device.duid);\n\n\t\t\tif (version != \"A01\" && !isSharedDevice) {\n\t\t\t\tconst duid = device.duid;\n\n\t\t\t\tawait this.requestsHandler.getParameter(duid, \"get_network_info\", []); // this needs to be called first on start of adapter to get the IP adresses of each device\n\t\t\t}\n\t\t}\n\n\t\tfor (const device of devices) {\n\t\t\tconst duid = device.duid;\n\n\t\t\tif (device.online) {\n\t\t\t\tawait this.local_api.initiateClient(duid);\n\n\t\t\t\tconst version = await this.getDeviceProtocolVersion(duid);\n\t\t\t\tthis.log.debug(`Device ${duid} is using protocol version ${version}`);\n\t\t\t\tawait this.createDeviceObjects(device);\n\t\t\t\tswitch (version) {\n\t\t\t\t\tcase \"A01\":\n\t\t\t\t\t\tawait this.requestsHandler.getStatus(duid);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"L01\":\n\t\t\t\t\t\tawait this.local_api.initL01(duid);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// get all maps on start of adapter but don't wait for them to finish. Not waiting speeds up the startup process\n\t\t\t\t\t\tthis.requestsHandler.getCleanSummary(duid).catch((error) => {\n\t\t\t\t\t\t\tthis.catchError(error.stack, \"getCleanSummary\", duid);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.requestsHandler.getStatus(duid).catch((error) => {\n\t\t\t\t\t\t\tthis.catchError(error.stack, \"getStatus\", duid);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.requestsHandler.getMap(duid).catch((error) => {\n\t\t\t\t\t\t\tthis.catchError(error.stack, \"getMap\", duid);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.log.debug(`Device ${duid} is offline. Skipping status update.`);\n\t\t\t}\n\t\t}\n\t\tawait this.processScenes();\n\n\t\tthis.log.info(`Starting adapter finished. Let's go!!!!!!!`);\n\n\t\t// handle requests based on interval here. No separate interval needed anywhere\n\t\tthis.log.debug(`initializing mainUpdateInterval`);\n\t\tlet updateIntervalCount = this.config.updateInterval; // start with update to get data right away\n\t\tthis.mainUpdateInterval = this.setInterval(async () => {\n\t\t\tupdateIntervalCount++; // this needs to be here in case someone sets the interval to 1 second to avoid running it twice in the beginning\n\n\t\t\tif (updateIntervalCount >= this.config.updateInterval) {\n\t\t\t\tupdateIntervalCount = 0;\n\n\t\t\t\tawait this.http_api.updateHomeData(); // this is needed to get the online status of the devices and has to run before any other requests. Otherwise requests might be missing homedata and will time out.\n\t\t\t\tconst cloudDevices = this.http_api.getDevices();\n\t\t\t\tthis.log.debug(`cloudDevices: ${JSON.stringify(cloudDevices)}`);\n\t\t\t\tthis.log.debug(`localDevices: ${JSON.stringify(this.local_api.localDevices)}`);\n\n\t\t\t\tfor (const device of cloudDevices) {\n\t\t\t\t\tconst duid = device.duid;\n\n\t\t\t\t\tif (!device.online) {\n\t\t\t\t\t\tthis.log.debug(`Device ${duid} is offline. Skipping status update.`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.updateDeviceInfo(duid, cloudDevices);\n\t\t\t\t\t\tconst version = await this.getDeviceProtocolVersion(duid);\n\n\t\t\t\t\t\tswitch (version) {\n\t\t\t\t\t\t\tcase \"A01\":\n\t\t\t\t\t\t\t\tawait this.requestsHandler.getStatus(duid);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait this.requestsHandler.getStatus(duid);\n\n\t\t\t\t\t\t\t\t\tthis.updateDeviceData(duid);\n\t\t\t\t\t\t\t\t\tthis.updateConsumablesPercent(duid);\n\n\t\t\t\t\t\t\t\t\t// update map when needed\n\t\t\t\t\t\t\t\t\tconst isCleaning = this.requestsHandler.isCleaning(duid);\n\t\t\t\t\t\t\t\t\tif (isCleaning) this.requestsHandler.getMap(duid);\n\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\tthis.catchError(error.stack, \"mainUpdateInterval\", duid);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 1000);\n\n\t\ttry {\n\t\t\tawait this.start_go2rtc();\n\t\t} catch (error) {\n\t\t\tthis.log.error(`Failed to start go2rtc: ${error.stack}`);\n\t\t}\n\n\t\t// Start map creation if enabled\n\t\tif (this.config.enable_map_creation) {\n\t\t\ttry {\n\t\t\t\tthis.startWebserver();\n\t\t\t\tawait this.startWebsocketServer();\n\t\t\t} catch (error) {\n\t\t\t\tthis.adapter.log.error(`Failed to start websocket server: ${error.stack}`);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise<string>}\n\t */\n\tasync ensureClientID() {\n\t\ttry {\n\t\t\tconst clientID = await this.getStateAsync(\"clientID\");\n\t\t\tif (!clientID || !clientID.val) {\n\t\t\t\tconst randomClientID = crypto.randomUUID();\n\t\t\t\tawait this.setState(\"clientID\", { val: randomClientID, ack: true });\n\t\t\t\tthis.log.info(`Generated and saved new clientID: ${randomClientID}`);\n\t\t\t\treturn randomClientID;\n\t\t\t} else {\n\t\t\t\tthis.log.info(`Loaded existing clientID: ${clientID.val}`);\n\t\t\t\treturn clientID.val.toString();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`Error ensuring clientID: ${error.message}`);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} device\n\t */\n\tasync createDeviceObjects(device) {\n\t\tconst duid = device.duid;\n\t\tconst name = device.name;\n\n\t\tawait this.device_features.processSupportedFeatures(duid);\n\n\t\tawait this.setObjectAsync(\"Devices.\" + duid, {\n\t\t\ttype: \"device\",\n\t\t\tcommon: {\n\t\t\t\tname: name,\n\t\t\t\tstatusStates: {\n\t\t\t\t\tonlineId: `${this.name}.${this.instance}.Devices.${duid}.deviceInfo.online`,\n\t\t\t\t},\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n\t\t// sub to all commands of this robot\n\t\tthis.subscribeStates(\"Devices.\" + duid + \".commands.*\");\n\t\tthis.subscribeStates(\"Devices.\" + duid + \".resetConsumables.*\");\n\t\tthis.subscribeStates(\"Devices.\" + duid + \".programs.startProgram\");\n\t\tthis.subscribeStates(\"Devices.\" + duid + \".deviceInfo.online\");\n\t\tthis.subscribeStates(\"Devices.\" + duid + \".deviceStatus.state\");\n\t}\n\n\tasync processScenes() {\n\t\tconst scenes = await this.http_api.getScenes();\n\n\t\tif (scenes && scenes?.result) {\n\t\t\tconst data = scenes.result;\n\n\t\t\tconst programs = {};\n\t\t\tfor (const program in data) {\n\t\t\t\tconst enabled = data[program].enabled;\n\t\t\t\tconst programID = data[program].id;\n\t\t\t\tconst programName = data[program].name;\n\t\t\t\tconst param = data[program].param;\n\n\t\t\t\tconst duid = JSON.parse(param).action.items[0].entityId;\n\n\t\t\t\tif (!programs[duid]) {\n\t\t\t\t\tprograms[duid] = {};\n\t\t\t\t}\n\t\t\t\tprograms[duid][programID] = programName;\n\n\t\t\t\tawait this.setObjectNotExistsAsync(`Devices.${duid}.programs`, {\n\t\t\t\t\ttype: \"folder\",\n\t\t\t\t\tcommon: {\n\t\t\t\t\t\tname: \"Programs\",\n\t\t\t\t\t},\n\t\t\t\t\tnative: {},\n\t\t\t\t});\n\n\t\t\t\tawait this.setObjectAsync(`Devices.${duid}.programs.${programID}`, {\n\t\t\t\t\ttype: \"folder\",\n\t\t\t\t\tcommon: {\n\t\t\t\t\t\tname: programName,\n\t\t\t\t\t},\n\t\t\t\t\tnative: {},\n\t\t\t\t});\n\n\t\t\t\tconst enabledPath = `Devices.${duid}.programs.${programID}.enabled`;\n\t\t\t\tawait this.createStateObjectHelper({ path: enabledPath, name: \"enabled\", type: \"boolean\", def: null, role: \"value\" });\n\t\t\t\tthis.setState(enabledPath, enabled, true);\n\n\t\t\t\tconst items = JSON.parse(param).action.items;\n\t\t\t\tfor (const item in items) {\n\t\t\t\t\tfor (const attribute in items[item]) {\n\t\t\t\t\t\tconst objectPath = `Devices.${duid}.programs.${programID}.items.${item}.${attribute}`;\n\t\t\t\t\t\tlet value = items[item][attribute];\n\t\t\t\t\t\tconst typeOfValue = typeof value;\n\n\t\t\t\t\t\tawait this.createStateObjectHelper({ path: objectPath, name: attribute, type: typeOfValue, def: null, role: \"value\", read: true, write: false });\n\n\t\t\t\t\t\tif (typeOfValue == \"object\") {\n\t\t\t\t\t\t\tvalue = value.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setState(objectPath, value, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const duid in programs) {\n\t\t\t\tconst objectPath = `Devices.${duid}.programs.startProgram`;\n\t\t\t\tawait this.createStateObjectHelper({\n\t\t\t\t\tpath: objectPath,\n\t\t\t\t\tname: \"Start saved program\",\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdef: Object.keys(programs[duid])[0],\n\t\t\t\t\trole: \"value\",\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: true,\n\t\t\t\t\tstates: programs[duid],\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tstartWebserver() {\n\t\tconst app = express();\n\t\tapp.use(express.static(\"lib/map\"));\n\t\twebserver = app.listen(this.config.webserverPort + this.instance);\n\n\t\twebserver.on(\"error\", (error) => {\n\t\t\t// This code will run if there was an error starting the server\n\t\t\tthis.log.error(`Error occurred: ${error}`);\n\t\t});\n\t}\n\tasync stopWebserver() {\n\t\twebserver.close();\n\t}\n\n\tasync startWebsocketServer() {\n\t\tsocketServer = new ws.Server({ server: webserver, path: \"/ws\" });\n\n\t\tsocketServer.on(\"connection\", async (socket) => {\n\t\t\tthis.socket = socket;\n\t\t\tthis.log.debug(`Websocket client connected`);\n\n\t\t\tsocket.on(\"pong\", () => {\n\t\t\t\tthis.socket = socket;\n\t\t\t});\n\n\t\t\tthis.webSocketInterval = this.setInterval(() => {\n\t\t\t\tif (!this.socket) {\n\t\t\t\t\tthis.log.debug(`Client disconnected. Stopping interval.`);\n\t\t\t\t\tthis.clearInterval(this.webSocketInterval);\n\t\t\t\t\tsocket.terminate();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.socket = null;\n\t\t\t\tsocket.ping();\n\t\t\t}, 1000);\n\n\t\t\tsocket.on(\"message\", async (message) => {\n\t\t\t\tconst data = JSON.parse(message.toString());\n\t\t\t\tconst sendValue: SendValue = { parameters: [], command: data.command };\n\n\t\t\t\tconst devices = this.http_api.getDevices();\n\n\t\t\t\tswitch (sendValue.command) {\n\t\t\t\t\tcase \"app_zoned_clean\":\n\t\t\t\t\tcase \"app_goto_target\":\n\t\t\t\t\tcase \"app_start\":\n\t\t\t\t\tcase \"app_stop\":\n\t\t\t\t\tcase \"stop_zoned_clean\":\n\t\t\t\t\tcase \"app_pause\":\n\t\t\t\t\tcase \"app_charge\":\n\t\t\t\t\t\tsendValue.parameters = data[\"parameters\"];\n\t\t\t\t\t\tthis.requestsHandler.command(data[\"duid\"], sendValue.command, sendValue.parameters);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"getRobots\":\n\t\t\t\t\t\tsendValue.command = \"robotList\";\n\n\t\t\t\t\t\tfor (const robotID in devices) {\n\t\t\t\t\t\t\tconst robot: Robot = { duid: devices[robotID].duid, name: devices[robotID].name };\n\t\t\t\t\t\t\tsendValue.parameters.push(robot);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsocket.send(JSON.stringify(sendValue));\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"getMap\":\n\t\t\t\t\t\tthis.requestsHandler.getMap(data.duid);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"get_photo\":\n\t\t\t\t\t\tthis.requestsHandler.getParameter(data[\"duid\"], \"get_photo\", data[\"attribute\"]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"sniffing_decrypt\":\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tthis.sniffing.decodeSniffedMessage(data, devices);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthis.log.error(\"Failed to decode/decrypt sniffing message. \" + error);\n\n\t\t\t\t\t\t\tif (this.supportsFeature && this.supportsFeature(\"PLUGINS\")) {\n\t\t\t\t\t\t\t\tif (this.sentryInstance) {\n\t\t\t\t\t\t\t\t\tthis.sentryInstance.getSentryObject().captureException(\"Failed to initialize API. Error: \" + error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsocket.on(\"close\", () => {\n\t\t\t\tthis.log.debug(`Client disconnected`);\n\t\t\t\tthis.clearInterval(this.webSocketInterval);\n\t\t\t\tthis.socket = null;\n\t\t\t});\n\n\t\t\tsocketServer.on(\"error\", (error) => {\n\t\t\t\tthis.log.error(\"WebSocket Server error: \" + error);\n\t\t\t});\n\t\t});\n\t}\n\tasync stopWebsocketServer() {\n\t\tsocketServer.close();\n\t}\n\n\t/**\n\t * @param {string} duid\n\t */\n\tasync updateDeviceData(duid) {\n\t\tconst robotModel = this.http_api.getRobotModel(duid);\n\t\tconst version = await this.getDeviceProtocolVersion(duid);\n\n\t\tif (version != \"A01\") {\n\t\t\tconst requestList = [\"get_fw_features\", \"get_multi_maps_list\", \"get_room_mapping\", \"get_consumable\", \"get_server_timer\", \"get_timer\"];\n\t\t\tfor (const request of requestList) {\n\t\t\t\tthis.requestsHandler.getParameter(duid, request, []);\n\t\t\t}\n\n\t\t\tthis.checkForNewFirmware(duid);\n\n\t\t\tswitch (robotModel) {\n\t\t\t\tcase \"roborock.vacuum.s4\":\n\t\t\t\tcase \"roborock.vacuum.s5\":\n\t\t\t\tcase \"roborock.vacuum.s5e\":\n\t\t\t\tcase \"roborock.vacuum.a08\":\n\t\t\t\tcase \"roborock.vacuum.a10\":\n\t\t\t\tcase \"roborock.vacuum.a40\":\n\t\t\t\t\t//do nothing\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"roborock.vacuum.s6\":\n\t\t\t\tcase \"roborock.vacuum.a72\":\n\t\t\t\t\tthis.requestsHandler.getParameter(duid, \"get_carpet_mode\", []);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"roborock.vacuum.a27\":\n\t\t\t\t\tthis.requestsHandler.getParameter(duid, \"get_dust_collection_switch_status\", {});\n\t\t\t\t\tthis.requestsHandler.getParameter(duid, \"get_wash_towel_mode\", {});\n\t\t\t\t\tthis.requestsHandler.getParameter(duid, \"get_smart_wash_params\", {});\n\t\t\t\t\tthis.requestsHandler.getParameter(duid, \"app_get_dryer_setting\", {});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.requestsHandler.getParameter(duid, \"get_carpet_mode\", []);\n\t\t\t\t\tthis.requestsHandler.getParameter(duid, \"get_carpet_clean_mode\", []);\n\t\t\t\t\tthis.requestsHandler.getParameter(duid, \"get_water_box_custom_mode\", []);\n\t\t\t}\n\t\t}\n\t}\n\n\tclearTimersAndIntervals() {\n\t\tif (this.commandTimeout) {\n\t\t\tthis.clearTimeout(this.commandTimeout);\n\t\t}\n\t\tif (this.mainUpdateInterval) {\n\t\t\tthis.clearInterval(this.mainUpdateInterval);\n\t\t}\n\t\tif (this.requestsHandler) {\n\t\t\tthis.requestsHandler.clearQueue();\n\t\t}\n\n\t\tif (this.mainUpdateInterval) {\n\t\t\tthis.clearInterval(this.mainUpdateInterval);\n\t\t}\n\n\t\tif (this.webSocketInterval) {\n\t\t\tthis.clearInterval(this.webSocketInterval);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} duid\n\t */\n\tasync updateConsumablesPercent(duid) {\n\t\tconst version = await this.getDeviceProtocolVersion(duid);\n\n\t\tif (version != \"A01\") {\n\t\t\tconst devices = this.http_api.getDevices();\n\t\t\tconst device = devices.find((device) => device.duid === duid);\n\t\t\tconst status = device.deviceStatus as DeviceStatus;\n\n\t\t\tfor (const [attribute, value] of Object.entries(status)) {\n\t\t\t\tif (attribute == \"125\" || attribute == \"126\" || attribute == \"127\") {\n\t\t\t\t\tconst val = value >= 0 && value <= 100 ? value : 0;\n\t\t\t\t\tconst commonExtended = this.device_features.getCommonConsumable(attribute);\n\t\t\t\t\tawait this.ensureState(`Devices.${duid}.consumables.${attribute}`, { val: val, ack: true }, commonExtended);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} duid\n\t * @param {Array} devices\n\t */\n\tasync updateDeviceInfo(duid, devices) {\n\t\tconst device = devices.find((device) => device.duid === duid);\n\n\t\tfor (const deviceAttribute in device) {\n\t\t\tif (typeof device[deviceAttribute] != \"object\") {\n\t\t\t\tconst commonDeviceInfo = deviceAttribute == \"activeTime\" ? { unit: \"h\" } : undefined;\n\t\t\t\tlet value;\n\t\t\t\tswitch (deviceAttribute) {\n\t\t\t\t\tcase \"activeTime\":\n\t\t\t\t\t\tvalue = Math.round(device[deviceAttribute] / 1000 / 60 / 60);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"createTime\":\n\t\t\t\t\t\tvalue = new Date(device[deviceAttribute] * 1000).toLocaleString();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvalue = device[deviceAttribute];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tawait this.ensureState(`Devices.${duid}.deviceInfo.${deviceAttribute}`, { val: value, ack: true }, commonDeviceInfo);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} duid\n\t */\n\tasync checkForNewFirmware(duid) {\n\t\tconst isLocalDevice = this.local_api.isLocalDevice(duid);\n\n\t\tif (isLocalDevice) {\n\t\t\tthis.http_api\n\t\t\t\t.getFirmwareStates(duid)\n\t\t\t\t.then(async (update) => {\n\t\t\t\t\tfor (const state in update.data.result) {\n\t\t\t\t\t\tconst value = update.data.result[state];\n\n\t\t\t\t\t\tthis.ensureState(`Devices.${duid}.updateStatus.${state}`, { val: value, ack: true });\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.log.error(`Failed to check for new firmware ${error.stack}`);\n\t\t\t\t});\n\t\t}\n\t}\n\n\tgetType(value) {\n\t\t// Get the type of the attribute.\n\t\tconst type = typeof value.val;\n\n\t\t// Return the appropriate string representation of the type.\n\t\tswitch (type) {\n\t\t\tcase \"boolean\":\n\t\t\tcase \"number\":\n\t\t\t\treturn type;\n\t\t\tdefault:\n\t\t\t\treturn \"string\";\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} path\n\t * @param {object} value\n\t * @param {object} [commonExtended]\n\t */\n\tasync ensureState(path, value, commonExtended?: StateCommonExtension) {\n\t\tif (this.isInitializing) {\n\t\t\tconst attribute = path.split(\".\").pop();\n\n\t\t\tif (!attribute) {\n\t\t\t\tthrow new Error(`Invalid path: \"${path}\"`);\n\t\t\t}\n\n\t\t\tconst folderPath = path.split(\".\").slice(0, -1).join(\".\");\n\n\t\t\tthis.ensureFolder(folderPath);\n\n\t\t\tconst common = {\n\t\t\t\tname: this.translations[attribute],\n\t\t\t\ttype: this.getType(value),\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\t...commonExtended,\n\t\t\t};\n\n\t\t\tconst result = await this.setObjectNotExistsAsync(path, {\n\t\t\t\ttype: \"state\",\n\t\t\t\tcommon: common,\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tif (!result) {\n\t\t\t\tconst obj = await this.getObjectAsync(path);\n\t\t\t\tif (obj && obj.common) {\n\t\t\t\t\tobj.common = common;\n\t\t\t\t\tawait this.extendObject(path, obj);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.setStateChangedAsync(path, value);\n\t}\n\n\t/**\n\t * @param {string} path\n\t * @param {object} commonExtended\n\t */\n\tasync ensureCommand(path, commonExtended) {\n\t\tif (this.isInitializing) {\n\t\t\tconst attribute = path.split(\".\").pop();\n\n\t\t\tif (!attribute) {\n\t\t\t\tthrow new Error(`Invalid path: \"${path}\"`);\n\t\t\t}\n\n\t\t\tconst folderPath = path.split(\".\").slice(0, -1).join(\".\");\n\n\t\t\tthis.ensureFolder(folderPath);\n\n\t\t\tconst common = {\n\t\t\t\tname: this.translations[attribute],\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: true,\n\t\t\t\t...commonExtended,\n\t\t\t};\n\n\t\t\tconst result = await this.setObjectNotExistsAsync(path, {\n\t\t\t\ttype: \"state\",\n\t\t\t\tcommon: common,\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tif (!result) {\n\t\t\t\tconst obj = await this.getObjectAsync(path);\n\t\t\t\tif (obj && obj.common) {\n\t\t\t\t\tobj.common = common;\n\t\t\t\t\tawait this.extendObject(path, obj);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync ensureFolder(path) {\n\t\tif (this.isInitializing) {\n\t\t\tconst attribute = path.split(\".\").pop();\n\n\t\t\tawait this.setObjectNotExistsAsync(path, {\n\t\t\t\ttype: \"folder\",\n\t\t\t\tcommon: {\n\t\t\t\t\tname: this.translations[attribute],\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\t\t}\n\t}\n\n\tasync createStateObjectHelper(options: StateObjectOptions) {\n\t\tconst { path, name, type, unit, def, role, read, write, states, native } = options;\n\n\t\tconst common: any = { name, type, role, read, write, unit, states };\n\t\tif (def !== undefined && def !== null && def !== \"\") common.def = def;\n\n\t\tawait this.setObjectNotExistsAsync(path, {\n\t\t\ttype: \"state\",\n\t\t\tcommon: common,\n\t\t\tnative: native,\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} duid\n\t */\n\tasync createDockingStationObject(duid) {\n\t\tfor (const state of dockingStationStates) {\n\t\t\tconst path = `Devices.${duid}.dockingStationStatus.${state}`;\n\t\t\tconst name = this.translations[state];\n\n\t\t\tawait this.setObjectNotExistsAsync(path, {\n\t\t\t\ttype: \"state\",\n\t\t\t\tcommon: {\n\t\t\t\t\tname: name,\n\t\t\t\t\ttype: \"number\",\n\t\t\t\t\trole: \"value\",\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t\tstates: { 0: \"UNKNOWN\", 1: \"ERROR\", 2: \"OK\" },\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} duid\n\t */\n\tasync createBaseRobotObjects(duid) {\n\t\tfor (const name of [\"mapBase64\", \"mapBase64Truncated\", \"mapData\"]) {\n\t\t\tconst objectString = `Devices.${duid}.map.${name}`;\n\t\t\tawait this.createStateObjectHelper({ path: objectString, name, type: \"string\", def: null, role: \"value\", read: true, write: false });\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} _duid\n\t */\n\tasync createBasicVacuumObjects(_duid) {\n\t\t// nothing for now\n\t}\n\n\t/**\n\t * @param {string} _duid\n\t */\n\tasync createBasicWashingMachineObjects(_duid) {\n\t\t// nothing for now\n\t}\n\n\t/**\n\t * @param {string} duid\n\t */\n\tasync getDeviceProtocolVersion(duid) {\n\t\tconst isLocalDevice = this.local_api.isLocalDevice(duid);\n\t\tthis.log.debug(`Device ${duid} is ${isLocalDevice ? \"local\" : \"cloud\"} device`);\n\n\t\tif (isLocalDevice) {\n\t\t\treturn this.local_api.getLocalProtocolVersion(duid);\n\t\t} else {\n\t\t\tconst devices = this.http_api.getDevices();\n\n\t\t\tfor (const device in devices) {\n\t\t\t\tif (devices[device].duid == duid) return devices[device].pv;\n\t\t\t}\n\t\t}\n\n\t\treturn \"Error in getRobotVersion. Version not found.\";\n\t}\n\n\tasync setupBasicObjects() {\n\t\tawait this.setObjectAsync(\"Devices\", {\n\t\t\ttype: \"folder\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Devices\",\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n\t\tawait this.setObjectAsync(\"UserData\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"UserData string\",\n\t\t\t\ttype: \"string\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n\t\tawait this.setObjectAsync(\"HomeData\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"HomeData string\",\n\t\t\t\ttype: \"string\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n\t\tawait this.setObjectNotExistsAsync(\"clientID\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Client ID\",\n\t\t\t\ttype: \"string\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n\t\tawait this.setObjectNotExistsAsync(\"endpoint\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"MQTT endpoint\",\n\t\t\t\ttype: \"string\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t}\n\n\tasync start_go2rtc() {\n\t\tconst devices = this.http_api.getDevices();\n\n\t\tlet cameraCount = 0;\n\t\tconst localKeys = this.http_api.getMatchedLocalKeys();\n\n\t\tconst port = 8554 + this.instance;\n\t\tconst rtspPort = 1984 + this.instance;\n\t\tconst go2rtcConfig = {\n\t\t\tserver: {\n\t\t\t\tlisten: `:${port}`,\n\t\t\t},\n\t\t\trtsp: {\n\t\t\t\tlisten: `:${rtspPort}`,\n\t\t\t},\n\t\t\tstreams: {},\n\t\t};\n\t\tfor (const device of devices) {\n\t\t\tconst duid = device.duid;\n\n\t\t\tif (localKeys) {\n\t\t\t\tconst localKey = localKeys.get(duid);\n\n\t\t\t\tconst { u, s, k } = this.http_api.get_rriot();\n\n\t\t\t\tif (this.device_features.getFeatureList(duid).isCameraSupported) {\n\t\t\t\t\tcameraCount++;\n\t\t\t\t\tgo2rtcConfig.streams[duid] = `roborock://mqtt-eu-3.roborock.com:8883?u=${u}&s=${s}&k=${k}&did=${duid}&key=${localKey}&pin=${this.config.cameraPin}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (cameraCount > 0) {\n\t\t\tif (go2rtcPath) {\n\t\t\t\ttry {\n\t\t\t\t\tconst go2rtcProcess = spawn(go2rtcPath.toString(), [\"-config\", JSON.stringify(go2rtcConfig)], { shell: false, detached: false, windowsHide: true });\n\n\t\t\t\t\tgo2rtcProcess.on(\"error\", (error) => {\n\t\t\t\t\t\tthis.log.error(`Error starting go2rtc: ${error.message}`);\n\t\t\t\t\t});\n\n\t\t\t\t\tgo2rtcProcess.stdout.on(\"data\", (data) => {\n\t\t\t\t\t\tthis.log.debug(`go2rtc output: ${data}`);\n\t\t\t\t\t});\n\n\t\t\t\t\tgo2rtcProcess.stderr.on(\"data\", (data) => {\n\t\t\t\t\t\tthis.log.error(`go2rtc error output: ${data}`);\n\t\t\t\t\t});\n\n\t\t\t\t\tprocess.on(\"exit\", () => {\n\t\t\t\t\t\tgo2rtcProcess.kill();\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.log.error(`Failed to start go2rtc: ${error.message}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Processes A01 protocol messages and stores the parsed data in a structured format.\n\t * @param {string} duid - The device unique identifier.\n\t * @param {object} response - The parsed response object.\n\t */\n\tasync processA01(duid, response) {\n\t\tif (!response || !response.dps || typeof response.dps !== \"object\") {\n\t\t\tthis.log.warn(`Invalid response from A01 with ${duid}`);\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [ID, value] of Object.entries(response.dps)) {\n\t\t\tconst folderName = ID.length === 5 ? ID : \"deviceStatus\";\n\t\t\tconst basePath = `Devices.${duid}.${folderName}`;\n\t\t\tconst stateName = A01states[ID] || ID;\n\n\t\t\tlet parsedValue = value;\n\n\t\t\tif (typeof value === \"string\" && value.startsWith(\"{\") && value.endsWith(\"}\")) {\n\t\t\t\tparsedValue = JSON.parse(value);\n\t\t\t}\n\n\t\t\tif (typeof parsedValue === \"object\" && parsedValue !== null) {\n\t\t\t\tawait this.setObjectNotExistsAsync(basePath, {\n\t\t\t\t\ttype: \"channel\",\n\t\t\t\t\tcommon: { name: stateName },\n\t\t\t\t\tnative: {},\n\t\t\t\t});\n\n\t\t\t\tfor (const [attribute, attrValue] of Object.entries(parsedValue)) {\n\t\t\t\t\tif (typeof attrValue === \"object\" && attrValue !== null) {\n\t\t\t\t\t\tconst subPath = `${basePath}.${attribute}`;\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(subPath, {\n\t\t\t\t\t\t\ttype: \"channel\",\n\t\t\t\t\t\t\tcommon: { name: attribute },\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfor (const [subAttribute, subAttrValue] of Object.entries(attrValue)) {\n\t\t\t\t\t\t\tif (typeof subAttrValue === \"object\" && subAttrValue !== null) {\n\t\t\t\t\t\t\t\tconst subSubPath = `${subPath}.${subAttribute}`;\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(subSubPath, {\n\t\t\t\t\t\t\t\t\ttype: \"channel\",\n\t\t\t\t\t\t\t\t\tcommon: { name: subAttribute },\n\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tfor (const [subSubAttribute, subSubAttrValue] of Object.entries(subAttrValue)) {\n\t\t\t\t\t\t\t\t\tconst subSubSubPath = `${subSubPath}.${subSubAttribute}`;\n\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(subSubSubPath, {\n\t\t\t\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\t\tname: subSubAttribute,\n\t\t\t\t\t\t\t\t\t\t\ttype: this.getType(subSubAttrValue),\n\t\t\t\t\t\t\t\t\t\t\trole: \"value\",\n\t\t\t\t\t\t\t\t\t\t\tread: true,\n\t\t\t\t\t\t\t\t\t\t\twrite: false,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tthis.setState(subSubSubPath, { val: subSubAttrValue, ack: true });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst statePath = `${subPath}.${subAttribute}`;\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(statePath, {\n\t\t\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\tname: subAttribute,\n\t\t\t\t\t\t\t\t\t\ttype: this.getType(subAttrValue),\n\t\t\t\t\t\t\t\t\t\trole: \"value\",\n\t\t\t\t\t\t\t\t\t\tread: true,\n\t\t\t\t\t\t\t\t\t\twrite: false,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.setState(statePath, { val: subAttrValue, ack: true });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst statePath = `${basePath}.${attribute}`;\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(statePath, {\n\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: attribute,\n\t\t\t\t\t\t\t\ttype: this.getType(attrValue),\n\t\t\t\t\t\t\t\trole: \"value\",\n\t\t\t\t\t\t\t\tread: true,\n\t\t\t\t\t\t\t\twrite: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.setState(statePath, { val: attrValue, ack: true });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst statePath = `${basePath}.${ID}`;\n\t\t\t\tawait this.setObjectNotExistsAsync(statePath, {\n\t\t\t\t\ttype: \"state\",\n\t\t\t\t\tcommon: {\n\t\t\t\t\t\tname: stateName,\n\t\t\t\t\t\ttype: this.getType(parsedValue),\n\t\t\t\t\t\trole: \"value\",\n\t\t\t\t\t\tread: true,\n\t\t\t\t\t\twrite: false,\n\t\t\t\t\t},\n\t\t\t\t\tnative: {},\n\t\t\t\t});\n\t\t\t\tthis.setState(statePath, { val: parsedValue, ack: true });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Resets the MQTT API instance by cleaning up resources and reinitializing it.\n\t */\n\tasync resetMqttApi() {\n\t\tthis.log.info(\"Resetting MQTT API instance...\");\n\t\t// Cleanup the existing MQTT API instance\n\t\tif (this.mqtt_api) {\n\t\t\tthis.mqtt_api.cleanup();\n\t\t\tthis.requestsHandler.clearQueue();\n\t\t}\n\t\t// Create a new MQTT API instance and initialize it\n\t\tthis.mqtt_api = new mqtt_api(this);\n\t\tawait this.mqtt_api.init();\n\t\tthis.log.info(\"MQTT API instance has been reset.\");\n\t}\n\n\t/**\n\t * @param {Error} error\n\t * @param {string} [attribute]\n\t * @param {string} [duid]\n\t */\n\tasync catchError(error, attribute, duid) {\n\t\tconst robotModel = duid ? this.http_api.getRobotModel(duid) : \"unknown device model\";\n\n\t\tif (error) {\n\t\t\tif (error.toString().includes(\"retry\") || error.toString().includes(\"locating\") || error.toString().includes(\"timed out after 30 seconds\")) {\n\t\t\t\tthis.log.warn(`Failed to process ${JSON.stringify(attribute)} on robot ${duid} (${robotModel}): ${error.stack || error}`);\n\t\t\t} else {\n\t\t\t\tthis.log.error(`Failed to process ${JSON.stringify(attribute)} on robot ${duid} (${robotModel}): ${error.stack || error}`);\n\n\t\t\t\tif (this.supportsFeature && this.supportsFeature(\"PLUGINS\")) {\n\t\t\t\t\tif (this.sentryInstance) {\n\t\t\t\t\t\tthis.sentryInstance.getSentryObject().captureException(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t * @param {() => void} callback\n\t */\n\tonUnload(callback) {\n\t\ttry {\n\t\t\tthis.clearTimersAndIntervals();\n\t\t\tthis.local_api.stopUdpDiscovery();\n\t\t\tthis.setState(\"info.connection\", { val: false, ack: true });\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tthis.log.error(`Failed to unload adapter: ${e.stack}`);\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// If you need to react to object changes, uncomment the following block and the corresponding line in the constructor.\n\t// You also need to subscribe to the objects with `this.subscribeObjects`, similar to `this.subscribeStates`.\n\t// /**\n\t//  * Is called if a subscribed object changes\n\t//  * @param {string} id\n\t//  * @param {ioBroker.Object | null | undefined} obj\n\t//  */\n\t// onObjectChange(id, obj) {\n\t// \tif (obj) {\n\t// \t\t// The object was changed\n\t// \t\tthis.log.info(`object ${id} changed: ${JSON.stringify(obj)}`);\n\t// \t} else {\n\t// \t\t// The object was deleted\n\t// \t\tthis.log.info(`object ${id} deleted`);\n\t// \t}\n\t// }\n\n\t/**\n\t * Is called if a subscribed state changes\n\t * @param {string} id\n\t * @param {ioBroker.State | null | undefined} state\n\t */\n\tasync onStateChange(id, state) {\n\t\tif (state) {\n\t\t\tconst idParts = id.split(\".\");\n\t\t\tconst duid = idParts[3];\n\t\t\tconst folder = idParts[4];\n\n\t\t\tif (state.ack) {\n\t\t\t\tif (id.endsWith(\"online\")) {\n\t\t\t\t\tthis.log.info(`Device ${duid} is now ${state.val ? \"online\" : \"offline\"}`);\n\t\t\t\t} else if (folder == \"deviceStatus\") {\n\t\t\t\t\tconst parameter = idParts[5];\n\t\t\t\t\tif (parameter == \"state\") {\n\t\t\t\t\t\tif (state.val == 8) {\n\t\t\t\t\t\t\tthis.requestsHandler.getCleanSummary(duid);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst command = idParts[5];\n\n\t\t\t\tthis.log.debug(`onStateChange: ${command} with value: ${state.val}`);\n\t\t\t\tif (state.val == true && typeof state.val == \"boolean\") {\n\t\t\t\t\tif (folder == \"resetConsumables\") {\n\t\t\t\t\t\tawait this.requestsHandler.command(duid, \"reset_consumable\", command);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.requestsHandler.command(duid, command);\n\t\t\t\t\t}\n\t\t\t\t} else if (command == \"load_multi_map\") {\n\t\t\t\t\tawait this.requestsHandler.command(duid, command, [state.val]);\n\t\t\t\t} else if (\n\t\t\t\t\tcommand == \"app_start\" ||\n\t\t\t\t\tcommand == \"app_segment_clean\" ||\n\t\t\t\t\tcommand == \"app_charge\" ||\n\t\t\t\t\tcommand == \"app_spot\" ||\n\t\t\t\t\tcommand == \"app_zoned_clean\" ||\n\t\t\t\t\tcommand == \"app_goto_target\"\n\t\t\t\t) {\n\t\t\t\t\tswitch (command) {\n\t\t\t\t\t\tcase \"app_zoned_clean\":\n\t\t\t\t\t\tcase \"app_goto_target\":\n\t\t\t\t\t\t\tif (typeof state.val === \"string\") {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst params = JSON.parse(state.val);\n\n\t\t\t\t\t\t\t\t\tif (command === \"app_zoned_clean\") {\n\t\t\t\t\t\t\t\t\t\t// Check if params is an array and contains multiple arrays\n\t\t\t\t\t\t\t\t\t\tif (Array.isArray(params) && params.every(Array.isArray)) {\n\t\t\t\t\t\t\t\t\t\t\tconst allZonesValid = params.every((zone) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst isCorrectLength = zone.length === 4 || zone.length === 5;\n\t\t\t\t\t\t\t\t\t\t\t\tconst areAllNumbers = zone.every((item) => typeof item === \"number\");\n\t\t\t\t\t\t\t\t\t\t\t\tconst isValidFifth = zone.length !== 5 || (zone[4] >= 1 && zone[4] <= 3);\n\t\t\t\t\t\t\t\t\t\t\t\treturn isCorrectLength && areAllNumbers && isValidFifth;\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\tif (allZonesValid) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.requestsHandler.command(duid, command, params);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`Invalid command parameters for ${command}: ${state.val}. Expected format: [[x1, y1, x2, y2, repeat], [x1, y1, x2, y2, repeat], ...] (where repeat is between 1 and 3)`\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t\t\t\t\t\t`Invalid command parameters for ${command}: ${state.val}. Expected format: [[x1, y1, x2, y2, repeat], [x1, y1, x2, y2, repeat], ...] (where repeat is between 1 and 3)`\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if (command === \"app_goto_target\") {\n\t\t\t\t\t\t\t\t\t\t// For app_goto_target, params should be an array with exactly two numbers\n\t\t\t\t\t\t\t\t\t\tconst isCorrectLength = params.length === 2;\n\t\t\t\t\t\t\t\t\t\tconst areAllNumbers = params.every((item) => typeof item === \"number\");\n\n\t\t\t\t\t\t\t\t\t\tif (isCorrectLength && areAllNumbers) {\n\t\t\t\t\t\t\t\t\t\t\tthis.requestsHandler.command(duid, command, params);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tthis.log.error(`Invalid command parameters for ${command}: ${state.val}. Expected format: [x, y]`);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\tthis.log.error(`Error parsing JSON for ${command}: ${error}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (command == \"startProgram\") {\n\t\t\t\t\tthis.http_api.executeScene(state);\n\t\t\t\t} else if (typeof state.val != \"boolean\") {\n\t\t\t\t\tthis.requestsHandler.command(duid, command, state.val);\n\t\t\t\t}\n\n\t\t\t\tif (typeof state.val == \"boolean\") {\n\t\t\t\t\tthis.commandTimeout = this.setTimeout(() => {\n\t\t\t\t\t\tthis.setState(id, false, true);\n\t\t\t\t\t}, 1000);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.log.error(`Error! Missing state onChangeState with ID ${id}!`);\n\t\t}\n\t}\n\n\t// If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\n\t// /**\n\t//  * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\n\t//  * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\n\t//  * @param {ioBroker.Message} obj\n\t//  */\n\t// onMessage(obj) {\n\t// \tif (typeof obj === \"object\" && obj.message) {\n\t// \t\tif (obj.command === \"send\") {\n\t// \t\t\t// e.g. send email or pushover or whatever\n\t// \t\t\tthis.log.info(\"send command\");\n\n\t// \t\t\t// Send response in callback if required\n\t// \t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, \"Message received\", obj.callback);\n\t// \t\t}\n\t// \t}\n\t// }\n\t// this.log.debug(deviceId);\n\t// this.log.debug(id);\n\t// this.log.debug(result);\n\t// });\n\t// }\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\t/**\n\t * @param {Partial<utils.AdapterOptions>} [options={}]\n\t */\n\tmodule.exports = (options) => new Roborock(options);\n} else {\n\t// otherwise start the instance directly\n\tnew Roborock();\n}\n"]}